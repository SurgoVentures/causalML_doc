Writing a Custom Pipeline Script
-------------------------

If the functionality exposed through the CLI is insufficient, it is fairly simple to define a new pipeline in a script and run that. We cannot test every possible pipeline, so there *will* be bugs; proceed with caution!


The result should be a simple script, such as the following, which runs structure learning on data generated by Intervene and outputs a report.

.. literalinclude:: pipeline_example.py
    :linenos:
    :language: python

Certain pipeline components have optional arguments. For example, if we wish to perform order MCMC with 5000 iterations instead of the default 25,000, we simply add the optional argument to the function call on line 17;

>>> pipeline = run_ordermcmc(steps=5_000)(pipeline)


To see what components exist - and what they do, what optional parameters they have etc. - check the API documentation at :ref:`intervene.components`. We would recommend also reading the following section, to better understand how each component works.


